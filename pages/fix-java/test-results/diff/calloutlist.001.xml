<html xmlns:deltaxml="http://www.deltaxml.com/ns/well-formed-delta-v1" xmlns="http://www.w3.org/1999/xhtml" xmlns:dxx="http://www.deltaxml.com/ns/xml-namespaced-attribute" xmlns:dxa="http://www.deltaxml.com/ns/non-namespaced-attribute" deltaxml:deltaV2="A!=B" deltaxml:version="2.0" deltaxml:content-type="full-context">
   <head deltaxml:deltaV2="A=B"/>
   <body deltaxml:deltaV2="A!=B">
      <article deltaxml:deltaV2="A!=B" id="R.1" class="article">
         <header deltaxml:deltaV2="A=B" class="article-titlepage">
            <h2>Article wrapper</h2>
         </header>
         <p deltaxml:deltaV2="A=B">Callouts using <code class="tag-element">co</code>:</p>
         <div deltaxml:deltaV2="A" class="screen">
            <pre>
               <span class="linenumber">  1</span>
               <span class="linenumber-separator"/>
               <span class="linenumber">  2</span>
               <span class="linenumber-separator"/>(let <a name="dl1" id="dl1"/>
               <img src="http://docbook.github.com/latest/img/1.png" alt="1" border="0"/>loopvar <a name="dl2" id="dl2"/>
               <img src="http://docbook.github.com/latest/img/2.png" alt="2" border="0"/>((count 1))
<span class="linenumber"/>
               <span class="linenumber-separator"/>
               <a name="dl3" id="dl3"/>
               <img src="http://docbook.github.com/latest/img/3.png" alt="3" border="0"/>(if (&gt; count 10)
<span class="linenumber">  4</span>
               <span class="linenumber-separator"/>
               <a name="dl4" id="dl4"/>
               <img src="http://docbook.github.com/latest/img/4.png" alt="4" border="0"/>#t
<span class="linenumber"/>
               <span class="linenumber-separator"/>    (<a name="dl5" id="dl5"/>
               <img src="http://docbook.github.com/latest/img/5.png" alt="5" border="0"/>loopvar <a name="dl6" id="dl6"/>
               <img src="http://docbook.github.com/latest/img/6.png" alt="6" border="0"/>(+ count 1))))</pre>
         </div><pre deltaxml:deltaV2="B" class="screen">
            <code>
(let <a name="dl1" id="dl1"/>
               <span data-number="1" class="callout-bug callout-bug-unicode">❶</span>loopvar <a name="dl2" id="dl2"/>
               <span data-number="2" class="callout-bug callout-bug-unicode">❷</span>((count 1))
  <a name="dl3" id="dl3"/>
               <span data-number="3" class="callout-bug callout-bug-unicode">❸</span>(if (&gt; count 10)
    <a name="dl4" id="dl4"/>
               <span data-number="4" class="callout-bug callout-bug-unicode">❹</span>#t
    (<a name="dl5" id="dl5"/>
               <span data-number="5" class="callout-bug callout-bug-unicode">❺</span>loopvar <a name="dl6" id="dl6"/>
               <span data-number="6" class="callout-bug callout-bug-unicode">❻</span>(+ count 1))))</code>
         </pre>
         <div deltaxml:deltaV2="A!=B" class="calloutlist">
            <table deltaxml:deltaV2="A" border="0" summary="Callout list">
               <tr class="callout-row">
                  <td class="callout-bug" valign="baseline" align="left">
                     <p class="callout">
                        <a href="#dl1">
                           <img src="http://docbook.github.com/latest/img/1.png" alt="1" border="0"/>
                        </a>  </p>
                  </td>
                  <td class="callout-body" valign="baseline" align="left">
                     <p>This variable controls the loop. It is declared without an
initial value, immediately after the <code class="literal">let</code>
operand.</p>
                  </td>
               </tr>
               <tr class="callout-row">
                  <td class="callout-bug" valign="baseline" align="left">
                     <p class="callout">
                        <a href="#dl2">
                           <img src="http://docbook.github.com/latest/img/2.png" alt="2" border="0"/>
                        </a>  </p>
                  </td>
                  <td class="callout-body" valign="baseline" align="left">
                     <p>Any number of additional local variables can be defined after
the loop variable, just as they can in any other
<code class="literal">let</code> expression.</p>
                  </td>
               </tr>
               <tr class="callout-row">
                  <td class="callout-bug" valign="baseline" align="left">
                     <p class="callout">
                        <a href="#dl3">
                           <img src="http://docbook.github.com/latest/img/3.png" alt="3" border="0"/>
                        </a>  </p>
                  </td>
                  <td class="callout-body" valign="baseline" align="left">
                     <p>If you ever want the loop to end, you have to put some sort of a
test in it.</p>
                  </td>
               </tr>
               <tr class="callout-row">
                  <td class="callout-bug" valign="baseline" align="left">
                     <p class="callout">
                        <a href="#dl4">
                           <img src="http://docbook.github.com/latest/img/4.png" alt="4" border="0"/>
                        </a>  </p>
                  </td>
                  <td class="callout-body" valign="baseline" align="left">
                     <p>This is the value that will be returned.</p>
                  </td>
               </tr>
               <tr class="callout-row">
                  <td class="callout-bug" valign="baseline" align="left">
                     <p class="callout">
                        <a href="#dl5">
                           <img src="http://docbook.github.com/latest/img/5.png" alt="5" border="0"/>
                        </a>  </p>
                  </td>
                  <td class="callout-body" valign="baseline" align="left">
                     <p>Note that you iterate the loop by using the loop variable as if
it was a function name.</p>
                  </td>
               </tr>
               <tr class="callout-row">
                  <td class="callout-bug" valign="baseline" align="left">
                     <p class="callout">
                        <a href="#dl6">
                           <img src="http://docbook.github.com/latest/img/6.png" alt="6" border="0"/>
                        </a>  </p>
                  </td>
                  <td class="callout-body" valign="baseline" align="left">
                     <p>The arguments to this function are the values that
you want the local variables declared in <a href="#dl2">
                           <img src="http://docbook.github.com/latest/img/2.png" alt="2" border="0"/>
                        </a> to have
in the next iteration.</p>
                  </td>
               </tr>
            </table><dl deltaxml:deltaV2="B">
               <dt class="callout">
                  <a href="#dl1" class="callout-link">
                     <span data-number="1" class="callout-bug callout-bug-unicode">❶</span>
                  </a> </dt>
               <dd>
                  <p>This variable controls the loop. It is declared without an
initial value, immediately after the <code class="literal">let</code>
operand.</p>
               </dd>
               <dt class="callout">
                  <a href="#dl2" class="callout-link">
                     <span data-number="2" class="callout-bug callout-bug-unicode">❷</span>
                  </a> </dt>
               <dd>
                  <p>Any number of additional local variables can be defined after
the loop variable, just as they can in any other
<code class="literal">let</code> expression.</p>
               </dd>
               <dt class="callout">
                  <a href="#dl3" class="callout-link">
                     <span data-number="3" class="callout-bug callout-bug-unicode">❸</span>
                  </a> </dt>
               <dd>
                  <p>If you ever want the loop to end, you have to put some sort of a
test in it.</p>
               </dd>
               <dt class="callout">
                  <a href="#dl4" class="callout-link">
                     <span data-number="4" class="callout-bug callout-bug-unicode">❹</span>
                  </a> </dt>
               <dd>
                  <p>This is the value that will be returned.</p>
               </dd>
               <dt class="callout">
                  <a href="#dl5" class="callout-link">
                     <span data-number="5" class="callout-bug callout-bug-unicode">❺</span>
                  </a> </dt>
               <dd>
                  <p>Note that you iterate the loop by using the loop variable as if
it was a function name.</p>
               </dd>
               <dt class="callout">
                  <a href="#dl6" class="callout-link">
                     <span data-number="6" class="callout-bug callout-bug-unicode">❻</span>
                  </a> </dt>
               <dd>
                  <p>The arguments to this function are the values that
you want the local variables declared in <a href="#dl2" class="callout-link">
                        <span data-number="2" class="callout-bug callout-bug-unicode">❷</span>
                     </a> to have
in the next iteration.</p>
               </dd>
            </dl>
         </div>
      </article>
   </body>
</html>