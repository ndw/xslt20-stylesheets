<html xmlns:deltaxml="http://www.deltaxml.com/ns/well-formed-delta-v1" xmlns="http://www.w3.org/1999/xhtml" xmlns:dxx="http://www.deltaxml.com/ns/xml-namespaced-attribute" xmlns:dxa="http://www.deltaxml.com/ns/non-namespaced-attribute" deltaxml:deltaV2="A!=B" deltaxml:version="2.0" deltaxml:content-type="full-context">
   <head deltaxml:deltaV2="A=B"/>
   <body deltaxml:deltaV2="A!=B">
      <article deltaxml:deltaV2="A!=B" id="R.1" class="article">
         <header deltaxml:deltaV2="A=B" class="article-titlepage">
            <h2>Article wrapper</h2>
         </header>
         <div deltaxml:deltaV2="A" class="programlisting">
            <pre>
               <span class="linenumber">  1</span>
               <span class="linenumber-separator"/>#!/usr/bin/perl -- # --*-Perl-*--
<span class="linenumber">  2</span>
               <span class="linenumber-separator"/>
               <span class="linenumber"/>
               <span class="linenumber-separator"/>use Getopt::Std;
<span class="linenumber">  4</span>
               <span class="linenumber-separator"/>
               <span class="linenumber"/>
               <span class="linenumber-separator"/>$usage = "Usage: $0 [-q] [-u|-p|-m] file [ file ... ]\n";
<span class="linenumber">  6</span>
               <span class="linenumber-separator"/>
               <span class="linenumber"/>
               <span class="linenumber-separator"/>die $usage if ! getopts('qupm');
<span class="linenumber">  8</span>
               <span class="linenumber-separator"/>
               <span class="linenumber"/>
               <span class="linenumber-separator"/>die $usage if ($opt_p + $opt_u + $opt_m) != 1;
<span class="linenumber"> 10</span>
               <span class="linenumber-separator"/>
               <span class="linenumber"/>
               <span class="linenumber-separator"/>$file = shift @ARGV || die $usage;
<span class="linenumber"> 12</span>
               <span class="linenumber-separator"/>
               <span class="linenumber"/>
               <span class="linenumber-separator"/>$opt = '-u' if $opt_u;
<span class="linenumber"> 14</span>
               <span class="linenumber-separator"/>$opt = '-p' if $opt_p;
<span class="linenumber"/>
               <span class="linenumber-separator"/>$opt = '-m' if $opt_m;</pre>
         </div><pre deltaxml:deltaV2="B" class="programlisting language-none line-numbers">
            <code>#!/usr/bin/perl -- # --*-Perl-*--

use Getopt::Std;

$usage = "Usage: $0 [-q] [-u|-p|-m] file [ file ... ]\n";

die $usage if ! getopts('qupm');

die $usage if ($opt_p + $opt_u + $opt_m) != 1;

$file = shift @ARGV || die $usage;

$opt = '-u' if $opt_u;
$opt = '-p' if $opt_p;
$opt = '-m' if $opt_m;</code>
         </pre>
         <p deltaxml:deltaV2="A=B">This paragraph interrupts the listing. The line numbering
continues in the following listing.
</p>
         <div deltaxml:deltaV2="A" class="programlisting">
            <pre>
               <span class="linenumber"> 16</span>
               <span class="linenumber-separator"/>while ($file) {
<span class="linenumber"/>
               <span class="linenumber-separator"/>    print "Converting $file to $opt linebreaks.\n" if !$opt_q;
<span class="linenumber"> 18</span>
               <span class="linenumber-separator"/>    open (F, "$file");
<span class="linenumber"/>
               <span class="linenumber-separator"/>    binmode F;
<span class="linenumber"> 20</span>
               <span class="linenumber-separator"/>    read (F, $_, -s $file);
<span class="linenumber"/>
               <span class="linenumber-separator"/>    close (F);
<span class="linenumber"> 22</span>
               <span class="linenumber-separator"/>
               <span class="linenumber"/>
               <span class="linenumber-separator"/>    s/\r\n/\n/sg;
<span class="linenumber"> 24</span>
               <span class="linenumber-separator"/>    s/\r/\n/sg;
<span class="linenumber"/>
               <span class="linenumber-separator"/>
               <span class="linenumber"> 26</span>
               <span class="linenumber-separator"/>    if ($opt eq '-p') {
<span class="linenumber"/>
               <span class="linenumber-separator"/>	s/\n/\r\n/sg;
<span class="linenumber"> 28</span>
               <span class="linenumber-separator"/>    } elsif ($opt eq '-m') {
<span class="linenumber"/>
               <span class="linenumber-separator"/>	s/\n/\r/sg;
<span class="linenumber"> 30</span>
               <span class="linenumber-separator"/>    }
<span class="linenumber"/>
               <span class="linenumber-separator"/>
               <span class="linenumber"> 32</span>
               <span class="linenumber-separator"/>    open (F, "&gt;$file");
<span class="linenumber"/>
               <span class="linenumber-separator"/>    binmode F;
<span class="linenumber"> 34</span>
               <span class="linenumber-separator"/>    print F $_;
<span class="linenumber"/>
               <span class="linenumber-separator"/>    close (F);
<span class="linenumber"> 36</span>
               <span class="linenumber-separator"/>
               <span class="linenumber"/>
               <span class="linenumber-separator"/>    $file = shift @ARGV;
<span class="linenumber"> 38</span>
               <span class="linenumber-separator"/>}</pre>
         </div><pre deltaxml:deltaV2="B" data-start="16" class="programlisting language-none line-numbers">
            <code>while ($file) {
    print "Converting $file to $opt linebreaks.\n" if !$opt_q;
    open (F, "$file");
    binmode F;
    read (F, $_, -s $file);
    close (F);

    s/\r\n/\n/sg;
    s/\r/\n/sg;

    if ($opt eq '-p') {
	s/\n/\r\n/sg;
    } elsif ($opt eq '-m') {
	s/\n/\r/sg;
    }

    open (F, "&gt;$file");
    binmode F;
    print F $_;
    close (F);

    $file = shift @ARGV;
}</code>
         </pre>
      </article>
   </body>
</html>